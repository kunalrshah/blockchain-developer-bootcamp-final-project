{
  "contractName": "PearlZZToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addressValue",
          "type": "address"
        }
      ],
      "name": "AddressValue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "stringValue",
          "type": "string"
        }
      ],
      "name": "StrValue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "uintValue",
          "type": "uint256"
        }
      ],
      "name": "UintValue",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPtsPromised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stakedLoyaltyLiability",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalPtsPromised",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "minted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addressValue\",\"type\":\"address\"}],\"name\":\"AddressValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stringValue\",\"type\":\"string\"}],\"name\":\"StrValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"}],\"name\":\"UintValue\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakedLoyaltyLiability\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalPtsPromised\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"minted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPtsPromised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Kunal R. Shah\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Each token will be an equivalent of 1 USD\"},\"mint(uint256,uint256)\":{\"details\":\"This contract will not provide an option to decrease the Staked Loyalty Liability once committed\",\"params\":{\"_stakedLoyaltyLiability\":\"is the Loyalty liability that a Loyalty Issuer is bringing to PearlZZ\",\"_totalPtsPromised\":\"is the total number of loyalty points that an issuer has promised to its customers\"},\"returns\":{\"minted\":\"boolean (true or false)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"PRLZ Token Contract \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"PearlZZToken ConstructorTokens will only be minted when a loyalty issuer stakes some of its loyalty liability to PearlZZ\"},\"decimals()\":{\"notice\":\"decimals represents the number of decimals for the token\"},\"mint(uint256,uint256)\":{\"notice\":\"Use this when onboarding the Loyalty Liability from a Loyalty Issuer Or when increasing an existing liability commitment from already onboard Loyalty Issuer\"},\"name()\":{\"notice\":\"name represents the name of the PearlZZ Token\"},\"symbol()\":{\"notice\":\"symbol is the symbol of the PearlZZ Token (PRLZ)\"},\"totalPtsPromised()\":{\"notice\":\"totalPtsPromised is meant to represent the collective number of loyalty points taked by loyalty issuers \"},\"totalSupply()\":{\"notice\":\"totalSupply represent the total supply of tokensthis totalSupply of PearlZZToken increases with each new Loyalty Issuer onboarded to PearlZZ\"},\"version()\":{\"notice\":\"version\"}},\"notice\":\"The totalSupply for this contract will start out at zeroWhen a Loyalty Issuer stakes their loyalty liability on PearlZZ.ai, that's when tokens will be minted\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/PearlZZToken.sol\":\"PearlZZToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/src/contracts/GenericContract.sol\":{\"keccak256\":\"0x3b7341c6534cd931bb86fb0b9b18dc96fd1d8517724ab09cbf905910e4a85fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7e2ed55520a69f62100935afe272fc1323fbe83c94431aa14045ff873f906e7\",\"dweb:/ipfs/Qmc6VouNeRi4WHvKSZwiWThtEegpeZTbFajfBmjxecq9bX\"]},\"project:/src/contracts/PearlZZToken.sol\":{\"keccak256\":\"0x73d4adb42e69f1949f181362bf9eada926775cdf2775a6b9a0c57ca68d2ebe0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6163e1ae1e90876308b178fe882838891408762ed77f0a64f62181f542d0d86e\",\"dweb:/ipfs/QmU7X97RBccE5vtwa7Kx3zvLkA2NoeZWyUnhk7oNFf4wsV\"]}},\"version\":1}",
  "bytecode": "0x608060405260405180602001604052806000815250600190805190602001906200002b92919062000267565b5060405180602001604052806000815250600290805190602001906200005392919062000267565b506040518060400160405280600381526020017f312e30000000000000000000000000000000000000000000000000000000000081525060039080519060200190620000a192919062000267565b50601260045560006005556000600655348015620000be57600080fd5b50620000f1620000dc6200019b640100000000026401000000009004565b620001a3640100000000026401000000009004565b6040518060400160405280600781526020017f506561726c5a5a00000000000000000000000000000000000000000000000000815250600190805190602001906200013e92919062000267565b506040518060400160405280600481526020017f50524c5a00000000000000000000000000000000000000000000000000000000815250600290805190602001906200018c92919062000267565b5060006005819055506200037c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620002759062000317565b90600052602060002090601f016020900481019282620002995760008555620002e5565b82601f10620002b457805160ff1916838001178555620002e5565b82800160010185558215620002e5579182015b82811115620002e4578251825591602001919060010190620002c7565b5b509050620002f49190620002f8565b5090565b5b8082111562000313576000816000905550600101620002f9565b5090565b600060028204905060018216806200033057607f821691505b602082108114156200034757620003466200034d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610b17806200038c6000396000f3fe608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480635f5ebf87116100835780635f5ebf8714610168578063715018a6146101865780638da5cb5b1461019057806395d89b41146101ae578063f2fde38b146101cc576100bb565b806306fdde03146100c057806318160ddd146100de5780631b2ef1ca146100fc578063313ce5671461012c57806354fd4d501461014a575b600080fd5b6100c86101e8565b6040516100d591906108a8565b60405180910390f35b6100e6610276565b6040516100f3919061090a565b60405180910390f35b6101166004803603810190610111919061072a565b61027c565b604051610123919061088d565b60405180910390f35b61013461033a565b604051610141919061090a565b60405180910390f35b610152610340565b60405161015f91906108a8565b60405180910390f35b6101706103ce565b60405161017d919061090a565b60405180910390f35b61018e6103d4565b005b61019861045c565b6040516101a59190610872565b60405180910390f35b6101b6610485565b6040516101c391906108a8565b60405180910390f35b6101e660048036038101906101e19190610701565b610513565b005b600180546101f590610a12565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610a12565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b505050505081565b60055481565b600061028661060b565b73ffffffffffffffffffffffffffffffffffffffff166102a461045c565b73ffffffffffffffffffffffffffffffffffffffff16146102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f1906108ea565b60405180910390fd5b6000905082600560008282546103109190610941565b9250508190555081600660008282546103299190610941565b925050819055506001905092915050565b60045481565b6003805461034d90610a12565b80601f016020809104026020016040519081016040528092919081815260200182805461037990610a12565b80156103c65780601f1061039b576101008083540402835291602001916103c6565b820191906000526020600020905b8154815290600101906020018083116103a957829003601f168201915b505050505081565b60065481565b6103dc61060b565b73ffffffffffffffffffffffffffffffffffffffff166103fa61045c565b73ffffffffffffffffffffffffffffffffffffffff1614610450576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610447906108ea565b60405180910390fd5b61045a6000610613565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002805461049290610a12565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90610a12565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b505050505081565b61051b61060b565b73ffffffffffffffffffffffffffffffffffffffff1661053961045c565b73ffffffffffffffffffffffffffffffffffffffff161461058f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610586906108ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f6906108ca565b60405180910390fd5b61060881610613565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506106e681610ab3565b92915050565b6000813590506106fb81610aca565b92915050565b60006020828403121561071357600080fd5b6000610721848285016106d7565b91505092915050565b6000806040838503121561073d57600080fd5b600061074b858286016106ec565b925050602061075c858286016106ec565b9150509250929050565b61076f81610997565b82525050565b61077e816109a9565b82525050565b600061078f82610925565b6107998185610930565b93506107a98185602086016109df565b6107b281610aa2565b840191505092915050565b60006107ca602683610930565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610830602083610930565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61086c816109d5565b82525050565b60006020820190506108876000830184610766565b92915050565b60006020820190506108a26000830184610775565b92915050565b600060208201905081810360008301526108c28184610784565b905092915050565b600060208201905081810360008301526108e3816107bd565b9050919050565b6000602082019050818103600083015261090381610823565b9050919050565b600060208201905061091f6000830184610863565b92915050565b600081519050919050565b600082825260208201905092915050565b600061094c826109d5565b9150610957836109d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561098c5761098b610a44565b5b828201905092915050565b60006109a2826109b5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156109fd5780820151818401526020810190506109e2565b83811115610a0c576000848401525b50505050565b60006002820490506001821680610a2a57607f821691505b60208210811415610a3e57610a3d610a73565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610abc81610997565b8114610ac757600080fd5b50565b610ad3816109d5565b8114610ade57600080fd5b5056fea26469706673582212202d3457efcd7a9fe6cf2f20e116b3359f3017c8be14dd9a1838d2650a6411ee4964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480635f5ebf87116100835780635f5ebf8714610168578063715018a6146101865780638da5cb5b1461019057806395d89b41146101ae578063f2fde38b146101cc576100bb565b806306fdde03146100c057806318160ddd146100de5780631b2ef1ca146100fc578063313ce5671461012c57806354fd4d501461014a575b600080fd5b6100c86101e8565b6040516100d591906108a8565b60405180910390f35b6100e6610276565b6040516100f3919061090a565b60405180910390f35b6101166004803603810190610111919061072a565b61027c565b604051610123919061088d565b60405180910390f35b61013461033a565b604051610141919061090a565b60405180910390f35b610152610340565b60405161015f91906108a8565b60405180910390f35b6101706103ce565b60405161017d919061090a565b60405180910390f35b61018e6103d4565b005b61019861045c565b6040516101a59190610872565b60405180910390f35b6101b6610485565b6040516101c391906108a8565b60405180910390f35b6101e660048036038101906101e19190610701565b610513565b005b600180546101f590610a12565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610a12565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b505050505081565b60055481565b600061028661060b565b73ffffffffffffffffffffffffffffffffffffffff166102a461045c565b73ffffffffffffffffffffffffffffffffffffffff16146102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f1906108ea565b60405180910390fd5b6000905082600560008282546103109190610941565b9250508190555081600660008282546103299190610941565b925050819055506001905092915050565b60045481565b6003805461034d90610a12565b80601f016020809104026020016040519081016040528092919081815260200182805461037990610a12565b80156103c65780601f1061039b576101008083540402835291602001916103c6565b820191906000526020600020905b8154815290600101906020018083116103a957829003601f168201915b505050505081565b60065481565b6103dc61060b565b73ffffffffffffffffffffffffffffffffffffffff166103fa61045c565b73ffffffffffffffffffffffffffffffffffffffff1614610450576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610447906108ea565b60405180910390fd5b61045a6000610613565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002805461049290610a12565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90610a12565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b505050505081565b61051b61060b565b73ffffffffffffffffffffffffffffffffffffffff1661053961045c565b73ffffffffffffffffffffffffffffffffffffffff161461058f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610586906108ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f6906108ca565b60405180910390fd5b61060881610613565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506106e681610ab3565b92915050565b6000813590506106fb81610aca565b92915050565b60006020828403121561071357600080fd5b6000610721848285016106d7565b91505092915050565b6000806040838503121561073d57600080fd5b600061074b858286016106ec565b925050602061075c858286016106ec565b9150509250929050565b61076f81610997565b82525050565b61077e816109a9565b82525050565b600061078f82610925565b6107998185610930565b93506107a98185602086016109df565b6107b281610aa2565b840191505092915050565b60006107ca602683610930565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610830602083610930565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61086c816109d5565b82525050565b60006020820190506108876000830184610766565b92915050565b60006020820190506108a26000830184610775565b92915050565b600060208201905081810360008301526108c28184610784565b905092915050565b600060208201905081810360008301526108e3816107bd565b9050919050565b6000602082019050818103600083015261090381610823565b9050919050565b600060208201905061091f6000830184610863565b92915050565b600081519050919050565b600082825260208201905092915050565b600061094c826109d5565b9150610957836109d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561098c5761098b610a44565b5b828201905092915050565b60006109a2826109b5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156109fd5780820151818401526020810190506109e2565b83811115610a0c576000848401525b50505050565b60006002820490506001821680610a2a57607f821691505b60208210811415610a3e57610a3d610a73565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610abc81610997565b8114610ac757600080fd5b50565b610ad3816109d5565b8114610ade57600080fd5b5056fea26469706673582212202d3457efcd7a9fe6cf2f20e116b3359f3017c8be14dd9a1838d2650a6411ee4964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:516:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "58:269:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "68:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "82:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "88:1:6",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "78:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "68:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "99:38:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "129:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "135:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "125:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:12:6"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "103:18:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "176:51:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "190:27:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "204:6:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "212:4:6",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "200:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "200:17:6"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "156:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "149:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "149:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "146:2:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:42:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "293:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "243:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "274:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "263:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "263:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "240:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "240:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "237:2:6"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "42:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "51:6:6",
                "type": ""
              }
            ],
            "src": "7:320:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "361:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "378:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "381:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "371:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "371:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "371:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "475:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "478:4:6",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "468:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "468:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "468:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "499:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "502:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "492:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "492:15:6"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "333:180:6"
          }
        ]
      },
      "contents": "{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6640:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "7:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:6",
                "type": ""
              }
            ],
            "src": "152:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:6",
                "type": ""
              }
            ],
            "src": "297:262:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "694:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "703:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "696:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "696:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "696:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "669:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "678:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "665:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "690:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "661:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "658:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "720:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "735:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "749:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "739:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "764:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "799:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "810:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "795:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "795:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "819:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "774:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "774:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "764:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "847:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "862:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "876:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "866:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "892:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "927:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "938:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "923:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "923:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "947:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "902:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "902:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "892:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "610:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "621:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "633:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "641:6:6",
                "type": ""
              }
            ],
            "src": "565:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1043:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1060:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1083:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1065:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1065:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1053:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1053:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1031:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1038:3:6",
                "type": ""
              }
            ],
            "src": "978:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1161:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1178:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1198:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1183:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1183:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1171:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1171:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1171:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1149:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1156:3:6",
                "type": ""
              }
            ],
            "src": "1102:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1309:272:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1319:53:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1366:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1333:32:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1333:39:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1323:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1381:78:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1447:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1452:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1388:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:71:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1381:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1494:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1501:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1490:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:16:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1508:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1513:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1468:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1468:52:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1468:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1529:46:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1540:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1567:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1545:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1545:29:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1536:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1536:39:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1529:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1290:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1297:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1305:3:6",
                "type": ""
              }
            ],
            "src": "1217:364:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1733:224:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1743:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1809:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1814:2:6",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1750:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1743:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1838:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1843:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1834:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1834:11:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1847:34:6",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1827:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1827:55:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1827:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1903:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1908:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1899:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1899:12:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1913:8:6",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1892:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1892:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1892:30:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1932:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1943:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1948:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1939:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1939:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1932:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1721:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1729:3:6",
                "type": ""
              }
            ],
            "src": "1587:370:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2109:184:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2119:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2185:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2190:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2126:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2126:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2119:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2214:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2219:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2210:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2210:11:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2223:34:6",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2203:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2203:55:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2203:55:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2268:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2279:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2284:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2275:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2275:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2268:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2097:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2105:3:6",
                "type": ""
              }
            ],
            "src": "1963:330:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2364:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2381:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2404:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2386:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2386:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2374:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2374:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2374:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2352:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2359:3:6",
                "type": ""
              }
            ],
            "src": "2299:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2521:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2531:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2543:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2554:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2539:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2539:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2531:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2611:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2624:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2635:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2620:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2620:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2567:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2567:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2567:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2493:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2505:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2516:4:6",
                "type": ""
              }
            ],
            "src": "2423:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2743:118:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2753:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2765:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2776:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2761:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2753:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2827:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2840:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2851:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2836:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2836:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2789:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2789:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2789:65:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2715:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2727:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2738:4:6",
                "type": ""
              }
            ],
            "src": "2651:210:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2985:195:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2995:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3007:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3018:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3003:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3003:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2995:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3042:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3053:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3038:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3038:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3061:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3067:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3031:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3031:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3031:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3087:86:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3159:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3168:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3095:63:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3095:78:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3087:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2957:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2969:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2980:4:6",
                "type": ""
              }
            ],
            "src": "2867:313:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3357:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3367:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3379:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3390:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3375:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3375:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3367:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3414:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3425:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3410:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3410:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3433:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3439:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3429:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3429:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3403:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3403:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3403:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3459:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3593:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3467:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3467:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3459:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3337:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3352:4:6",
                "type": ""
              }
            ],
            "src": "3186:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3782:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3792:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3804:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3815:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3800:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3800:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3792:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3839:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3850:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3835:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3835:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3858:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3864:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3854:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3854:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3828:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3828:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3828:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3884:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4018:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3892:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3892:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3884:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3762:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3777:4:6",
                "type": ""
              }
            ],
            "src": "3611:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4134:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4144:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4156:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4167:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4152:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4152:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4144:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4224:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4237:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4248:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4233:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4233:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4180:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4180:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4180:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4106:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4118:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4129:4:6",
                "type": ""
              }
            ],
            "src": "4036:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4323:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4334:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4350:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4344:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4344:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4334:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4306:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4316:6:6",
                "type": ""
              }
            ],
            "src": "4264:99:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4465:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4482:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4487:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4475:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4475:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4475:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4503:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4522:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4527:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4518:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4518:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4503:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4437:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4442:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4453:11:6",
                "type": ""
              }
            ],
            "src": "4369:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4588:261:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4598:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4621:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4603:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4603:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4598:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4632:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4655:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4637:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4637:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4632:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4795:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4797:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4797:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4797:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4716:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4723:66:6",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4791:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4719:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4719:74:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4713:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4713:81:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4710:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4827:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4838:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4841:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4834:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4834:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4827:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4575:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4578:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4584:3:6",
                "type": ""
              }
            ],
            "src": "4544:305:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4900:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4910:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4939:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4921:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4921:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4910:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4882:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4892:7:6",
                "type": ""
              }
            ],
            "src": "4855:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4999:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5009:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5034:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5027:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5027:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5020:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5020:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5009:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4981:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4991:7:6",
                "type": ""
              }
            ],
            "src": "4957:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5098:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5108:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5123:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5130:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5119:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5119:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5108:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5080:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5090:7:6",
                "type": ""
              }
            ],
            "src": "5053:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5230:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5240:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5251:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5240:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5212:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5222:7:6",
                "type": ""
              }
            ],
            "src": "5185:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5317:258:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5327:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5336:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5331:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5396:63:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5421:3:6"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5426:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5417:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5417:11:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5440:3:6"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5445:1:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5436:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5436:11:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5430:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5430:18:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5410:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5410:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5410:39:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5357:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5360:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5354:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5354:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5368:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5370:15:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5379:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5382:2:6",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5375:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5375:10:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5370:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5350:3:6",
                    "statements": []
                  },
                  "src": "5346:113:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5493:76:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5543:3:6"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5548:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5539:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5539:16:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5557:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5532:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5532:27:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5532:27:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5474:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5477:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5471:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5471:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5468:2:6"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5299:3:6",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5304:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5309:6:6",
                "type": ""
              }
            ],
            "src": "5268:307:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5632:269:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5642:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5656:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5662:1:6",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5652:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5652:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5642:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5673:38:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5703:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5709:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5699:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5699:12:6"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5677:18:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5750:51:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5764:27:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5778:6:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5786:4:6",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5774:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5774:17:6"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5764:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5730:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5723:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5723:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5720:2:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5853:42:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "5867:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5867:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5867:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5817:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5840:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5848:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5837:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5837:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5814:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5811:2:6"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5616:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5625:6:6",
                "type": ""
              }
            ],
            "src": "5581:320:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5935:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5952:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5955:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5945:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5945:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5945:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6049:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6052:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6042:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6042:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6042:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6073:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6076:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6066:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6066:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6066:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5907:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6121:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6138:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6141:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6131:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6131:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6131:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6235:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6238:4:6",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6228:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6228:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6228:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6259:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6262:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6252:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6252:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6252:15:6"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "6093:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6327:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6337:38:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6355:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6362:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6351:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6351:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6371:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6367:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6367:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6347:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:28:6"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "6337:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6310:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "6320:6:6",
                "type": ""
              }
            ],
            "src": "6279:102:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6430:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6487:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6496:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6499:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6489:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6489:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6489:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6453:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6478:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "6460:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6460:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6450:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6450:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6443:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6443:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6440:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6423:5:6",
                "type": ""
              }
            ],
            "src": "6387:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6558:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6615:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6624:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6627:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6617:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6617:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6617:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6581:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6606:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "6588:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6588:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6578:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6578:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6571:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6571:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6568:2:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6551:5:6",
                "type": ""
              }
            ],
            "src": "6515:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "544:2916:5:-:0;;;707:23;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;800:25;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;854:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;988:2;962:28;;1196:1;1167:30;;1356:1;1322:35;;2037:449;;;;;;;;;;867:23:0;877:12;:10;;;:12;;;:::i;:::-;867:9;;;:23;;;:::i;:::-;2058:16:5;;;;;;;;;;;;;;;;;:4;:16;;;;;;;;;;;;:::i;:::-;;2081:15;;;;;;;;;;;;;;;;;:6;:15;;;;;;;;;;;;:::i;:::-;;2433:1;2419:11;:15;;;;544:2916;;587:96:1;640:7;666:10;659:17;;587:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;544:2916:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:6:-;;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:2;;212:4;204:6;200:17;190:27;;146:2;274;266:6;263:14;243:18;240:38;237:2;;;293:18;;:::i;:::-;237:2;58:269;;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;544:2916:5;;;;;;;",
  "deployedSourceMap": "544:2916:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;707:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1167:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3066:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;962:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;854:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1322:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:0;;;:::i;:::-;;973:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;800:25:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1846:189:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;707:23:5;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1167:30::-;;;;:::o;3066:370::-;3165:11;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3194:5:5::1;3185:14;;3219:23;3204:11;;:38;;;;;;;:::i;:::-;;;;;;;;3314:17;3294:16;;:37;;;;;;;:::i;:::-;;;;;;;;3408:4;3399:13;;3066:370:::0;;;;:::o;962:28::-;;;;:::o;854:29::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1322:35::-;;;;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;800:25:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;;;1926:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;587:96:1:-;640:7;666:10;659:17;;587:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:118::-;1065:24;1083:5;1065:24;:::i;:::-;1060:3;1053:37;1043:53;;:::o;1102:109::-;1183:21;1198:5;1183:21;:::i;:::-;1178:3;1171:34;1161:50;;:::o;1217:364::-;;1333:39;1366:5;1333:39;:::i;:::-;1388:71;1452:6;1447:3;1388:71;:::i;:::-;1381:78;;1468:52;1513:6;1508:3;1501:4;1494:5;1490:16;1468:52;:::i;:::-;1545:29;1567:6;1545:29;:::i;:::-;1540:3;1536:39;1529:46;;1309:272;;;;;:::o;1587:370::-;;1750:67;1814:2;1809:3;1750:67;:::i;:::-;1743:74;;1847:34;1843:1;1838:3;1834:11;1827:55;1913:8;1908:2;1903:3;1899:12;1892:30;1948:2;1943:3;1939:12;1932:19;;1733:224;;;:::o;1963:330::-;;2126:67;2190:2;2185:3;2126:67;:::i;:::-;2119:74;;2223:34;2219:1;2214:3;2210:11;2203:55;2284:2;2279:3;2275:12;2268:19;;2109:184;;;:::o;2299:118::-;2386:24;2404:5;2386:24;:::i;:::-;2381:3;2374:37;2364:53;;:::o;2423:222::-;;2554:2;2543:9;2539:18;2531:26;;2567:71;2635:1;2624:9;2620:17;2611:6;2567:71;:::i;:::-;2521:124;;;;:::o;2651:210::-;;2776:2;2765:9;2761:18;2753:26;;2789:65;2851:1;2840:9;2836:17;2827:6;2789:65;:::i;:::-;2743:118;;;;:::o;2867:313::-;;3018:2;3007:9;3003:18;2995:26;;3067:9;3061:4;3057:20;3053:1;3042:9;3038:17;3031:47;3095:78;3168:4;3159:6;3095:78;:::i;:::-;3087:86;;2985:195;;;;:::o;3186:419::-;;3390:2;3379:9;3375:18;3367:26;;3439:9;3433:4;3429:20;3425:1;3414:9;3410:17;3403:47;3467:131;3593:4;3467:131;:::i;:::-;3459:139;;3357:248;;;:::o;3611:419::-;;3815:2;3804:9;3800:18;3792:26;;3864:9;3858:4;3854:20;3850:1;3839:9;3835:17;3828:47;3892:131;4018:4;3892:131;:::i;:::-;3884:139;;3782:248;;;:::o;4036:222::-;;4167:2;4156:9;4152:18;4144:26;;4180:71;4248:1;4237:9;4233:17;4224:6;4180:71;:::i;:::-;4134:124;;;;:::o;4264:99::-;;4350:5;4344:12;4334:22;;4323:40;;;:::o;4369:169::-;;4487:6;4482:3;4475:19;4527:4;4522:3;4518:14;4503:29;;4465:73;;;;:::o;4544:305::-;;4603:20;4621:1;4603:20;:::i;:::-;4598:25;;4637:20;4655:1;4637:20;:::i;:::-;4632:25;;4791:1;4723:66;4719:74;4716:1;4713:81;4710:2;;;4797:18;;:::i;:::-;4710:2;4841:1;4838;4834:9;4827:16;;4588:261;;;;:::o;4855:96::-;;4921:24;4939:5;4921:24;:::i;:::-;4910:35;;4900:51;;;:::o;4957:90::-;;5034:5;5027:13;5020:21;5009:32;;4999:48;;;:::o;5053:126::-;;5130:42;5123:5;5119:54;5108:65;;5098:81;;;:::o;5185:77::-;;5251:5;5240:16;;5230:32;;;:::o;5268:307::-;5336:1;5346:113;5360:6;5357:1;5354:13;5346:113;;;5445:1;5440:3;5436:11;5430:18;5426:1;5421:3;5417:11;5410:39;5382:2;5379:1;5375:10;5370:15;;5346:113;;;5477:6;5474:1;5471:13;5468:2;;;5557:1;5548:6;5543:3;5539:16;5532:27;5468:2;5317:258;;;;:::o;5581:320::-;;5662:1;5656:4;5652:12;5642:22;;5709:1;5703:4;5699:12;5730:18;5720:2;;5786:4;5778:6;5774:17;5764:27;;5720:2;5848;5840:6;5837:14;5817:18;5814:38;5811:2;;;5867:18;;:::i;:::-;5811:2;5632:269;;;;:::o;5907:180::-;5955:77;5952:1;5945:88;6052:4;6049:1;6042:15;6076:4;6073:1;6066:15;6093:180;6141:77;6138:1;6131:88;6238:4;6235:1;6228:15;6262:4;6259:1;6252:15;6279:102;;6371:2;6367:7;6362:2;6355:5;6351:14;6347:28;6337:38;;6327:54;;;:::o;6387:122::-;6460:24;6478:5;6460:24;:::i;:::-;6453:5;6450:35;6440:2;;6499:1;6496;6489:12;6440:2;6430:79;:::o;6515:122::-;6588:24;6606:5;6588:24;:::i;:::-;6581:5;6578:35;6568:2;;6627:1;6624;6617:12;6568:2;6558:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n// pragma solidity >=0.4.22 <0.9.0;\r\n// pragma solidity >=0.7.0 <0.9.0;\r\npragma solidity 0.8.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\";\r\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\r\n\r\nimport \"./GenericContract.sol\"; \r\n\r\n/// @title PRLZ Token Contract \r\n/// @author Kunal R. Shah\r\n/// @notice The totalSupply for this contract will start out at zero\r\n/// @notice When a Loyalty Issuer stakes their loyalty liability on PearlZZ.ai, that's when tokens will be minted\r\ncontract PearlZZToken is GenericContract, Ownable {\r\n  using SafeMath for uint;\r\n\r\n  // Variables\r\n\r\n\t/// @notice name represents the name of the PearlZZ Token\r\n  string public name = \"\";\r\n\r\n\t/// @notice symbol is the symbol of the PearlZZ Token (PRLZ)\r\n  string public symbol = \"\";\r\n\r\n\t/// @notice version\r\n  string public version = '1.0'; \r\n\r\n\t/// @notice decimals represents the number of decimals for the token\r\n  uint256 public decimals = 18;\r\n\r\n\t/// @notice totalSupply represent the total supply of tokens\r\n\t/// @notice this totalSupply of PearlZZToken increases with each new Loyalty Issuer onboarded to PearlZZ\r\n  uint256 public totalSupply = 0;\r\n\r\n\t/// @notice totalPtsPromised is meant to represent the collective number of loyalty points taked by loyalty issuers \r\n\tuint256 public totalPtsPromised = 0;\r\n\r\n// balanceOf variable isn't currently being used. \r\n// But, it could be used to keep an account of the loyalty liability amount staked by each loyalty issuer\r\n// Given that this contract does't use Loyalty Issuer crypto addresses yet\r\n// -- it needs at least an issuer name to keep track of loyality liability amounts per issuer\r\n// -- double check if this is already being tracked in PearlZZExchaneg contract first\r\n// mapping(address => uint256) public balanceOf;\r\n\r\n\r\n\t/// @notice PearlZZToken Constructor\r\n\t/// @notice Tokens will only be minted when a loyalty issuer stakes some of its loyalty liability to PearlZZ\r\n\t/// @dev Each token will be an equivalent of 1 USD\r\n\tconstructor() {\r\n    name = \"PearlZZ\";\r\n    symbol = \"PRLZ\";\r\n\t\t//\r\n\t\t// Initial PearlZZ supply from the constructor's point of view is going to be Zero. \r\n\t\t// We can change this later, if we feel it is necessary.\r\n\t\t// \r\n\t\t// The only the way the token gets minted is when a Issuer is onboarded \r\n\t\t// or when an existing Issuer is adding more of their Loyalty Liability\r\n\t\t//\r\n\t\ttotalSupply = 0;\r\n//    balanceOf[msg.sender] = totalSupply; \r\n\r\n\t} // constructor\r\n\r\n\t/// @notice Use this when onboarding the Loyalty Liability from a Loyalty Issuer \r\n\t/// @notice Or when increasing an existing liability commitment from already onboard Loyalty Issuer\r\n\t/// @dev This contract will not provide an option to decrease the Staked Loyalty Liability once committed\r\n\t/// @param _stakedLoyaltyLiability is the Loyalty liability that a Loyalty Issuer is bringing to PearlZZ\r\n\t/// @param _totalPtsPromised is the total number of loyalty points that an issuer has promised to its customers\r\n\t/// @return minted boolean (true or false)\r\n\tfunction mint(uint256 _stakedLoyaltyLiability, uint256 _totalPtsPromised) public onlyOwner returns(bool minted) {\r\n\r\n\t\tminted = false;\r\n\t\ttotalSupply += _stakedLoyaltyLiability; // does this need to be converted to wei value\r\n\t\ttotalPtsPromised += _totalPtsPromised;\r\n//\t\tbalanceOf[msg.sender] = totalSupply * (10 ** decimals);\r\n\r\n\t\tminted = true;\r\n\t\treturn(minted);\r\n\t} // function mint()\r\n\r\n} // PearlZZToken\r\n\r\n",
  "sourcePath": "/mnt/c/pr0/blockchain-developer-bootcamp-final-project/src/contracts/PearlZZToken.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/PearlZZToken.sol",
    "exportedSymbols": {
      "Context": [
        125
      ],
      "GenericContract": [
        453
      ],
      "Ownable": [
        103
      ],
      "PearlZZToken": [
        1223
      ],
      "SafeMath": [
        437
      ]
    },
    "id": 1224,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1138,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "106:22:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "id": 1139,
        "nodeType": "ImportDirective",
        "scope": 1224,
        "sourceUnit": 438,
        "src": "132:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 1140,
        "nodeType": "ImportDirective",
        "scope": 1224,
        "sourceUnit": 104,
        "src": "199:60:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/GenericContract.sol",
        "file": "./GenericContract.sol",
        "id": 1141,
        "nodeType": "ImportDirective",
        "scope": 1224,
        "sourceUnit": 454,
        "src": "263:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1143,
              "name": "GenericContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 453,
              "src": "569:15:5"
            },
            "id": 1144,
            "nodeType": "InheritanceSpecifier",
            "src": "569:15:5"
          },
          {
            "baseName": {
              "id": 1145,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "586:7:5"
            },
            "id": 1146,
            "nodeType": "InheritanceSpecifier",
            "src": "586:7:5"
          }
        ],
        "contractDependencies": [
          103,
          125,
          453
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1142,
          "nodeType": "StructuredDocumentation",
          "src": "299:245:5",
          "text": "@title PRLZ Token Contract \n @author Kunal R. Shah\n @notice The totalSupply for this contract will start out at zero\n @notice When a Loyalty Issuer stakes their loyalty liability on PearlZZ.ai, that's when tokens will be minted"
        },
        "fullyImplemented": true,
        "id": 1223,
        "linearizedBaseContracts": [
          1223,
          103,
          125,
          453
        ],
        "name": "PearlZZToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1149,
            "libraryName": {
              "id": 1147,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 437,
              "src": "605:8:5"
            },
            "nodeType": "UsingForDirective",
            "src": "599:24:5",
            "typeName": {
              "id": 1148,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "618:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 1150,
              "nodeType": "StructuredDocumentation",
              "src": "646:57:5",
              "text": "@notice name represents the name of the PearlZZ Token"
            },
            "functionSelector": "06fdde03",
            "id": 1153,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "707:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1151,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "707:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 1152,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "728:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1154,
              "nodeType": "StructuredDocumentation",
              "src": "736:60:5",
              "text": "@notice symbol is the symbol of the PearlZZ Token (PRLZ)"
            },
            "functionSelector": "95d89b41",
            "id": 1157,
            "mutability": "mutable",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "800:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1155,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "800:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 1156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "823:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1158,
              "nodeType": "StructuredDocumentation",
              "src": "831:19:5",
              "text": "@notice version"
            },
            "functionSelector": "54fd4d50",
            "id": 1161,
            "mutability": "mutable",
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "854:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1159,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "854:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e30",
              "id": 1160,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "878:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3",
                "typeString": "literal_string \"1.0\""
              },
              "value": "1.0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1162,
              "nodeType": "StructuredDocumentation",
              "src": "890:68:5",
              "text": "@notice decimals represents the number of decimals for the token"
            },
            "functionSelector": "313ce567",
            "id": 1165,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "962:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1163,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "962:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 1164,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "988:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1166,
              "nodeType": "StructuredDocumentation",
              "src": "996:167:5",
              "text": "@notice totalSupply represent the total supply of tokens\n @notice this totalSupply of PearlZZToken increases with each new Loyalty Issuer onboarded to PearlZZ"
            },
            "functionSelector": "18160ddd",
            "id": 1169,
            "mutability": "mutable",
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "1167:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1167,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1167:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1168,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1196:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1170,
              "nodeType": "StructuredDocumentation",
              "src": "1203:116:5",
              "text": "@notice totalPtsPromised is meant to represent the collective number of loyalty points taked by loyalty issuers "
            },
            "functionSelector": "5f5ebf87",
            "id": 1173,
            "mutability": "mutable",
            "name": "totalPtsPromised",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "1322:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1171,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1322:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1172,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1356:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "2051:435:5",
              "statements": [
                {
                  "expression": {
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1177,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1153,
                      "src": "2058:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "506561726c5a5a",
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2065:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_60043ded6f10725dbe4e13999621320ba359bff34da82120c955ec17c85dea39",
                        "typeString": "literal_string \"PearlZZ\""
                      },
                      "value": "PearlZZ"
                    },
                    "src": "2058:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1180,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:16:5"
                },
                {
                  "expression": {
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1181,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1157,
                      "src": "2081:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "50524c5a",
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2090:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6a7b63c18988d375e4a86a0c911520b54c63c414f96e0f49efd93a74faff077a",
                        "typeString": "literal_string \"PRLZ\""
                      },
                      "value": "PRLZ"
                    },
                    "src": "2081:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:15:5"
                },
                {
                  "expression": {
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1185,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "2419:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2433:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2419:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "2419:15:5"
                }
              ]
            },
            "documentation": {
              "id": 1174,
              "nodeType": "StructuredDocumentation",
              "src": "1834:200:5",
              "text": "@notice PearlZZToken Constructor\n @notice Tokens will only be minted when a loyalty issuer stakes some of its loyalty liability to PearlZZ\n @dev Each token will be an equivalent of 1 USD"
            },
            "id": 1190,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2048:2:5"
            },
            "returnParameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2051:0:5"
            },
            "scope": 1223,
            "src": "2037:449:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1221,
              "nodeType": "Block",
              "src": "3178:258:5",
              "statements": [
                {
                  "expression": {
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1202,
                      "name": "minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "3185:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3194:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3185:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:14:5"
                },
                {
                  "expression": {
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1206,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "3204:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1207,
                      "name": "_stakedLoyaltyLiability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "3219:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3204:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "3204:38:5"
                },
                {
                  "expression": {
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1210,
                      "name": "totalPtsPromised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
                      "src": "3294:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1211,
                      "name": "_totalPtsPromised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "3314:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3294:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "3294:37:5"
                },
                {
                  "expression": {
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1214,
                      "name": "minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "3399:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3408:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3399:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1217,
                  "nodeType": "ExpressionStatement",
                  "src": "3399:13:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1218,
                        "name": "minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "3424:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1219,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3423:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1201,
                  "id": 1220,
                  "nodeType": "Return",
                  "src": "3417:14:5"
                }
              ]
            },
            "documentation": {
              "id": 1191,
              "nodeType": "StructuredDocumentation",
              "src": "2506:557:5",
              "text": "@notice Use this when onboarding the Loyalty Liability from a Loyalty Issuer \n @notice Or when increasing an existing liability commitment from already onboard Loyalty Issuer\n @dev This contract will not provide an option to decrease the Staked Loyalty Liability once committed\n @param _stakedLoyaltyLiability is the Loyalty liability that a Loyalty Issuer is bringing to PearlZZ\n @param _totalPtsPromised is the total number of loyalty points that an issuer has promised to its customers\n @return minted boolean (true or false)"
            },
            "functionSelector": "1b2ef1ca",
            "id": 1222,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1198,
                "modifierName": {
                  "id": 1197,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "3147:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3147:9:5"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_stakedLoyaltyLiability",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "3080:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3080:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "_totalPtsPromised",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "3113:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3113:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3079:60:5"
            },
            "returnParameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "minted",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "3165:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3164:13:5"
            },
            "scope": 1223,
            "src": "3066:370:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1224,
        "src": "544:2916:5"
      }
    ],
    "src": "106:3374:5"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/PearlZZToken.sol",
    "exportedSymbols": {
      "Context": [
        125
      ],
      "GenericContract": [
        453
      ],
      "Ownable": [
        103
      ],
      "PearlZZToken": [
        1223
      ],
      "SafeMath": [
        437
      ]
    },
    "id": 1224,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1138,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "106:22:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "id": 1139,
        "nodeType": "ImportDirective",
        "scope": 1224,
        "sourceUnit": 438,
        "src": "132:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 1140,
        "nodeType": "ImportDirective",
        "scope": 1224,
        "sourceUnit": 104,
        "src": "199:60:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/GenericContract.sol",
        "file": "./GenericContract.sol",
        "id": 1141,
        "nodeType": "ImportDirective",
        "scope": 1224,
        "sourceUnit": 454,
        "src": "263:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1143,
              "name": "GenericContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 453,
              "src": "569:15:5"
            },
            "id": 1144,
            "nodeType": "InheritanceSpecifier",
            "src": "569:15:5"
          },
          {
            "baseName": {
              "id": 1145,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "586:7:5"
            },
            "id": 1146,
            "nodeType": "InheritanceSpecifier",
            "src": "586:7:5"
          }
        ],
        "contractDependencies": [
          103,
          125,
          453
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1142,
          "nodeType": "StructuredDocumentation",
          "src": "299:245:5",
          "text": "@title PRLZ Token Contract \n @author Kunal R. Shah\n @notice The totalSupply for this contract will start out at zero\n @notice When a Loyalty Issuer stakes their loyalty liability on PearlZZ.ai, that's when tokens will be minted"
        },
        "fullyImplemented": true,
        "id": 1223,
        "linearizedBaseContracts": [
          1223,
          103,
          125,
          453
        ],
        "name": "PearlZZToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1149,
            "libraryName": {
              "id": 1147,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 437,
              "src": "605:8:5"
            },
            "nodeType": "UsingForDirective",
            "src": "599:24:5",
            "typeName": {
              "id": 1148,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "618:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 1150,
              "nodeType": "StructuredDocumentation",
              "src": "646:57:5",
              "text": "@notice name represents the name of the PearlZZ Token"
            },
            "functionSelector": "06fdde03",
            "id": 1153,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "707:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1151,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "707:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 1152,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "728:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1154,
              "nodeType": "StructuredDocumentation",
              "src": "736:60:5",
              "text": "@notice symbol is the symbol of the PearlZZ Token (PRLZ)"
            },
            "functionSelector": "95d89b41",
            "id": 1157,
            "mutability": "mutable",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "800:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1155,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "800:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 1156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "823:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1158,
              "nodeType": "StructuredDocumentation",
              "src": "831:19:5",
              "text": "@notice version"
            },
            "functionSelector": "54fd4d50",
            "id": 1161,
            "mutability": "mutable",
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "854:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1159,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "854:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e30",
              "id": 1160,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "878:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3",
                "typeString": "literal_string \"1.0\""
              },
              "value": "1.0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1162,
              "nodeType": "StructuredDocumentation",
              "src": "890:68:5",
              "text": "@notice decimals represents the number of decimals for the token"
            },
            "functionSelector": "313ce567",
            "id": 1165,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "962:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1163,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "962:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 1164,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "988:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1166,
              "nodeType": "StructuredDocumentation",
              "src": "996:167:5",
              "text": "@notice totalSupply represent the total supply of tokens\n @notice this totalSupply of PearlZZToken increases with each new Loyalty Issuer onboarded to PearlZZ"
            },
            "functionSelector": "18160ddd",
            "id": 1169,
            "mutability": "mutable",
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "1167:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1167,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1167:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1168,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1196:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1170,
              "nodeType": "StructuredDocumentation",
              "src": "1203:116:5",
              "text": "@notice totalPtsPromised is meant to represent the collective number of loyalty points taked by loyalty issuers "
            },
            "functionSelector": "5f5ebf87",
            "id": 1173,
            "mutability": "mutable",
            "name": "totalPtsPromised",
            "nodeType": "VariableDeclaration",
            "scope": 1223,
            "src": "1322:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1171,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1322:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1172,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1356:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "2051:435:5",
              "statements": [
                {
                  "expression": {
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1177,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1153,
                      "src": "2058:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "506561726c5a5a",
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2065:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_60043ded6f10725dbe4e13999621320ba359bff34da82120c955ec17c85dea39",
                        "typeString": "literal_string \"PearlZZ\""
                      },
                      "value": "PearlZZ"
                    },
                    "src": "2058:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1180,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:16:5"
                },
                {
                  "expression": {
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1181,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1157,
                      "src": "2081:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "50524c5a",
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2090:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6a7b63c18988d375e4a86a0c911520b54c63c414f96e0f49efd93a74faff077a",
                        "typeString": "literal_string \"PRLZ\""
                      },
                      "value": "PRLZ"
                    },
                    "src": "2081:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:15:5"
                },
                {
                  "expression": {
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1185,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "2419:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2433:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2419:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "2419:15:5"
                }
              ]
            },
            "documentation": {
              "id": 1174,
              "nodeType": "StructuredDocumentation",
              "src": "1834:200:5",
              "text": "@notice PearlZZToken Constructor\n @notice Tokens will only be minted when a loyalty issuer stakes some of its loyalty liability to PearlZZ\n @dev Each token will be an equivalent of 1 USD"
            },
            "id": 1190,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2048:2:5"
            },
            "returnParameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2051:0:5"
            },
            "scope": 1223,
            "src": "2037:449:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1221,
              "nodeType": "Block",
              "src": "3178:258:5",
              "statements": [
                {
                  "expression": {
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1202,
                      "name": "minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "3185:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3194:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3185:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:14:5"
                },
                {
                  "expression": {
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1206,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "3204:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1207,
                      "name": "_stakedLoyaltyLiability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "3219:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3204:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "3204:38:5"
                },
                {
                  "expression": {
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1210,
                      "name": "totalPtsPromised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
                      "src": "3294:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1211,
                      "name": "_totalPtsPromised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "3314:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3294:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "3294:37:5"
                },
                {
                  "expression": {
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1214,
                      "name": "minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "3399:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3408:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3399:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1217,
                  "nodeType": "ExpressionStatement",
                  "src": "3399:13:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1218,
                        "name": "minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "3424:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1219,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3423:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1201,
                  "id": 1220,
                  "nodeType": "Return",
                  "src": "3417:14:5"
                }
              ]
            },
            "documentation": {
              "id": 1191,
              "nodeType": "StructuredDocumentation",
              "src": "2506:557:5",
              "text": "@notice Use this when onboarding the Loyalty Liability from a Loyalty Issuer \n @notice Or when increasing an existing liability commitment from already onboard Loyalty Issuer\n @dev This contract will not provide an option to decrease the Staked Loyalty Liability once committed\n @param _stakedLoyaltyLiability is the Loyalty liability that a Loyalty Issuer is bringing to PearlZZ\n @param _totalPtsPromised is the total number of loyalty points that an issuer has promised to its customers\n @return minted boolean (true or false)"
            },
            "functionSelector": "1b2ef1ca",
            "id": 1222,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1198,
                "modifierName": {
                  "id": 1197,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "3147:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3147:9:5"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_stakedLoyaltyLiability",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "3080:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3080:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "_totalPtsPromised",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "3113:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3113:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3079:60:5"
            },
            "returnParameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "minted",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "3165:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3164:13:5"
            },
            "scope": 1223,
            "src": "3066:370:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1224,
        "src": "544:2916:5"
      }
    ],
    "src": "106:3374:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-27T18:57:11.857Z",
  "devdoc": {
    "author": "Kunal R. Shah",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Each token will be an equivalent of 1 USD"
      },
      "mint(uint256,uint256)": {
        "details": "This contract will not provide an option to decrease the Staked Loyalty Liability once committed",
        "params": {
          "_stakedLoyaltyLiability": "is the Loyalty liability that a Loyalty Issuer is bringing to PearlZZ",
          "_totalPtsPromised": "is the total number of loyalty points that an issuer has promised to its customers"
        },
        "returns": {
          "minted": "boolean (true or false)"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "PRLZ Token Contract ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "PearlZZToken ConstructorTokens will only be minted when a loyalty issuer stakes some of its loyalty liability to PearlZZ"
      },
      "decimals()": {
        "notice": "decimals represents the number of decimals for the token"
      },
      "mint(uint256,uint256)": {
        "notice": "Use this when onboarding the Loyalty Liability from a Loyalty Issuer Or when increasing an existing liability commitment from already onboard Loyalty Issuer"
      },
      "name()": {
        "notice": "name represents the name of the PearlZZ Token"
      },
      "symbol()": {
        "notice": "symbol is the symbol of the PearlZZ Token (PRLZ)"
      },
      "totalPtsPromised()": {
        "notice": "totalPtsPromised is meant to represent the collective number of loyalty points taked by loyalty issuers "
      },
      "totalSupply()": {
        "notice": "totalSupply represent the total supply of tokensthis totalSupply of PearlZZToken increases with each new Loyalty Issuer onboarded to PearlZZ"
      },
      "version()": {
        "notice": "version"
      }
    },
    "notice": "The totalSupply for this contract will start out at zeroWhen a Loyalty Issuer stakes their loyalty liability on PearlZZ.ai, that's when tokens will be minted",
    "version": 1
  }
}